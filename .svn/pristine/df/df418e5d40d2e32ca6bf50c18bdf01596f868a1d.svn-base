package com.org.seratic.lucky.accessData.control;

import java.util.ArrayList;
import java.util.List;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.org.seratic.lucky.accessData.entities.E_MstCapacitacion;
import com.org.seratic.lucky.accessData.entities.E_ReporteCapacitacion;
import com.org.seratic.lucky.accessData.entities.Entity;

public class E_MstCapacitacionController extends EntityController {

	private SQLiteDatabase db;
	private Cursor dbCursor;

	public E_MstCapacitacionController(SQLiteDatabase db) {
		this.db = db;
	}

	@Override
	public boolean create(Entity e) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean edit(Entity e) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean remove(Entity e) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<Entity> getAll() {
		// TODO Auto-generated method stub
		return null;
	}

	public List<Object> getByReporte(int codReporte) {
		List<Object> capacitaciones = null;
		
		String sql = "SELECT cod_reporte, cod_capacitacion, desc_capacitacion FROM TBL_MST_CAPACITACION " + "WHERE cod_reporte = " + codReporte;
		dbCursor = db.rawQuery(sql, null);
		if (dbCursor.getCount() > 0) {
			capacitaciones = new ArrayList<Object>();
			dbCursor.moveToFirst();
			while (!dbCursor.isAfterLast()) {
				E_MstCapacitacion capacitacion = new E_MstCapacitacion();
				capacitacion.setCod_reporte(dbCursor.getString(0));
				capacitacion.setCod_capacitacion(dbCursor.getString(1));
				capacitacion.setDesc_capacitacion(dbCursor.getString(2));
				capacitaciones.add(capacitacion);
				dbCursor.moveToNext();
			}
		}
		return capacitaciones;

	}

	public List<Object> getElementsForGrid(int id_reporte_cab) {
		
		List<Object> capacitaciones = null;

		String sql = "SELECT c.cod_capacitacion, c.desc_capacitacion, rc.valor_capacitacion, rc.cod_motivo from TBL_MST_CAPACITACION c " + "join TBL_MOV_REPORTE_CAB cab ON(cab.cod_reporte = c.cod_reporte)" + "left outer join TBL_MOV_REP_CAPACITACION rc on (rc.cod_capacitacion = c.cod_capacitacion) and (rc.cod_reporte_cab = cab.id) " + "where cab.id = "+id_reporte_cab;
		dbCursor = db.rawQuery(sql, null);
			if (dbCursor.getCount() > 0) {
				dbCursor.moveToFirst();
					capacitaciones = new ArrayList<Object>();
					while (!dbCursor.isAfterLast()) {
						E_ReporteCapacitacion mA = new E_ReporteCapacitacion();
						mA.setCod_capacitacion(dbCursor.getString(0));
						mA.setDescripcion(dbCursor.getString(1));
						mA.setValor_capacitacion(dbCursor.getString(2));
						mA.setValor_motivo(dbCursor.getString(3));
						mA.setCod_reporte_cab(id_reporte_cab);
						capacitaciones.add(mA);
						dbCursor.moveToNext();
					}
			}
		
		return capacitaciones;
	}

		public E_ReporteCapacitacion getcodMotivobyIdRepCab(int id_reporte_cab) {
		E_ReporteCapacitacion mA = new E_ReporteCapacitacion();
		String sql = "SELECT cod_motivo FROM TBL_MOV_REP_CAPACITACION WHERE cod_reporte_cab = "+id_reporte_cab+" and cod_motivo != ''";
		dbCursor = db.rawQuery(sql, null);
			
		if (dbCursor.getCount() > 0) {
			dbCursor.moveToFirst();
			mA.setCod_motivo(dbCursor.getString(0));
			mA.setCod_reporte_cab(id_reporte_cab);
		}else{
			return null;
		}
		return mA;
	}
	
}
